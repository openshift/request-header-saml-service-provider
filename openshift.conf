SSLProxyEngine on
# Need to replace this with the master ca.crt
SSLProxyCACertificateFile /run/secrets/kubernetes.io/serviceaccount/ca.crt
# It's critical to enforce client certificates on the Master.  Otherwise
# requests could spoof the X-Remote-User header by accessing the Master's
# /oauth/authorize endpoint directly.
SSLProxyMachineCertificateFile ${PROXY_MACHINE_CERTIFICATE}

# mod_auth_mellon only accepts its own hostname in the RedirectTo field
# so we redirect the user here, then back to OpenShift Public URL
Redirect /redirect ${OCP_PUBLIC_URL}

# Send all requests to the console
RewriteEngine On
RewriteCond %{REQUEST_URI} ^/mod_auth_basic/?
RewriteCond %{HTTP:X-Csrf-Token} ^$ [NC]		
RewriteRule ^.* - [F,L]


<Location />
    MellonEnable "info"
    MellonEndpointPath /mellon
    MellonSPMetadataFile /etc/httpd/saml2/mellon-metadata.xml
    MellonSPPrivateKeyFile /etc/httpd/saml2/mellon.key
    MellonSPCertFile /etc/httpd/saml2/mellon.crt
    MellonIdPMetadataFile /etc/httpd/saml2/idp-metadata.xml
</Location>

<Location ${PROXY_PATH}>
    AuthType Mellon
    MellonEnable "auth"
    Require valid-user

    # Proxy to backend once authenticated
    ProxyPass ${PROXY_DESTINATION}
    ProxyPassReverse ${PROXY_DESTINATION}

    <If "-z env('REMOTE_USER_SAML_ATTRIBUTE')">
       # Set the Remote-User header to the value of the authenticated username
       RequestHeader set Remote-User %{MELLON_NAME_ID}e env=MELLON_NAME_ID
    </If>
    <Else>
       # Use a custom attribute as the remote username by setting $REMOTE_USER_SAML_ATTRIBUTE to a custom attribute name
       # Require a value in the attribute we're going to use:
       MellonCond ${REMOTE_USER_SAML_ATTRIBUTE} .+ [REG]
       # Map the long attribute name to a nice short one
       MellonSetEnv user ${REMOTE_USER_SAML_ATTRIBUTE}
       # Set the Remote-User header to the value of the mapped envvar:
       RequestHeader set Remote-User %{MELLON_user}e env=MELLON_user
    </Else>

    <If "-n env('REMOTE_USER_NAME_SAML_ATTRIBUTE')">
       MellonSetEnv name ${REMOTE_USER_NAME_SAML_ATTRIBUTE}
       RequestHeader set Remote-User-Name %{MELLON_name}e env=MELLON_name
    </If>

    <If "-n env('REMOTE_USER_EMAIL_SAML_ATTRIBUTE')">
       MellonSetEnv email ${REMOTE_USER_EMAIL_SAML_ATTRIBUTE}
       RequestHeader set Remote-User-Email %{MELLON_email}e env=MELLON_email
    </If>

    <If "-n env('REMOTE_USER_PREFERRED_USERNAME_SAML_ATTRIBUTE')">
       MellonSetEnv preferred_username ${REMOTE_USER_PREFERRED_USERNAME_SAML_ATTRIBUTE}
       RequestHeader set Remote-User-Preferred-Username %{MELLON_preferred_username}e env=MELLON_preferred_username
    </If>

</Location>

RequestHeader unset Remote-User
