apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: httpd-saml-serviceprovider
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: httpd
    name: httpd
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: httpd
      deploymentconfig: httpd
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: httpd
    name: httpd
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: httpd
      deploymentconfig: httpd
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: httpd
          deploymentconfig: httpd
      spec:
        containers:
        - env:
          - name: OCP_PUBLIC_URL
            value: ${OCP_PUBLIC_URL}
          - name: PROXY_PATH
            value: ${PROXY_PATH}
          - name: PROXY_DESTINATION
            value: ${PROXY_DESTINATION}
          - name: PROXY_MACHINE_CERTIFICATE
            value: ${PROXY_MACHINE_CERTIFICATE}
          - name: SERVER_NAME
            value: ${SERVER_NAME}
          image: docker-registry.default.svc:5000/openshift/httpd:2.4
          imagePullPolicy: IfNotPresent
          name: httpd
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pki/tls/certs/localhost.crt
            name: httpd-certificate
            subPath: localhost.crt
          - mountPath: /etc/pki/tls/private/localhost.key
            name: httpd-private-key
            subPath: localhost.key
          - mountPath: /etc/pki/tls/private/localhost.pem
            name: httpd-pem
            subPath: localhost.pem
          - mountPath: /etc/httpd/conf.d/openshift.conf
            name: httpd-mellon-conf
            subPath: openshift.conf
          - mountPath: /usr/share/container-scripts/httpd/pre-init/50-update-ServerName.sh
            name: server-name-script
            subPath: 50-update-ServerName.sh
          - mountPath: /etc/httpd/saml2
            name: saml2
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: httpd-certificate
          name: httpd-certificate
        - configMap:
            defaultMode: 420
            name: httpd-private-key
          name: httpd-private-key
        - configMap:
            defaultMode: 420
            name: httpd-pem
          name: httpd-pem
        - configMap:
            defaultMode: 420
            name: httpd-mellon-conf
          name: httpd-mellon-conf
        - configMap:
            defaultMod: 420
            name: server-name-script
          name: server-name-script
        - configMap:
            defaultMode: 420
            name: saml2
          name: saml2
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - httpd
        from:
          kind: ImageStreamTag
          name: httpd:2.4
          namespace: openshift
      type: ImageChange
parameters:
- description: "Openshift Public URL"
  displayName: "Openshift Public URL"
  name: OCP_PUBLIC_URL
  required: true
- description: "Proxy Path URL"
  displayName: "Proxy Path URL"
  name: PROXY_PATH
  required: true
- description: "Proxy Destination URL"
  displayName: "Proxy Destination URL"
  name: PROXY_DESTINATION
  required: true
- description: "Proxy Machine Certificate location"
  displayName: "Proxy Machine Certificate location"
  name: PROXY_MACHINE_CERTIFICATE
  required: true
- description: "Server Name (cn)"
  displayName: "Server Name (cn)"
  name: SERVER_NAME
  required: true
